plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation files('../libs/sodium-0.0.1.jar')

    // https://mvnrepository.com/artifact/org.scala-lang/scala-library
    implementation 'org.scala-lang:scala-library:2.13.7'

    // https://mvnrepository.com/artifact/io.reactivex.rxjava3/rxjava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.3'

    // https://mvnrepository.com/artifact/io.reactivex/rxscala
    implementation 'io.reactivex:rxscala_2.13:0.27.0'

    // https://mvnrepository.com/artifact/nz.sodium/sodium
    //implementation 'nz.sodium:sodium:1.2.0'

    // https://mvnrepository.com/artifact/com.outr/reactify
    implementation 'com.outr:reactify_2.13:4.0.6'

    // https://mvnrepository.com/artifact/co.fs2/fs2-core
    implementation 'co.fs2:fs2-core_2.13:3.2-148-d9af944'
    // https://mvnrepository.com/artifact/co.fs2/fs2-io
    implementation 'co.fs2:fs2-io_2.13:3.2-148-d9af944'
    // https://mvnrepository.com/artifact/co.fs2/fs2-reactive-streams
    implementation 'co.fs2:fs2-reactive-streams_2.13:3.2-148-d9af944'

    // https://mvnrepository.com/artifact/com.typesafe.akka/akka-stream
    implementation 'com.typesafe.akka:akka-stream_2.13:2.6.17'
    implementation platform('com.typesafe.akka:akka-bom_2.13:2.6.17')
    testImplementation 'com.typesafe.akka:akka-stream-testkit_2.13:2.6.17'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // https://mvnrepository.com/artifact/com.tngtech.archunit/archunit
    implementation 'com.tngtech.archunit:archunit:0.22.0'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.scalatest:scalatest_2.13:3.2.10'
    testImplementation 'org.scalatestplus:junit-4-13_2.13:3.2.2.0'

    // https://mvnrepository.com/artifact/org.scalacheck/scalacheck
    testImplementation 'org.scalacheck:scalacheck_2.13:1.15.4'

    // https://mvnrepository.com/artifact/org.scalatestplus/scalacheck-1-15
    testImplementation 'org.scalatestplus:scalacheck-1-15_2.13:3.3.0.0-SNAP3'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:2.0.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'
}

test {
    useJUnitPlatform{
        includeEngines("junit-jupiter", "junit-vintage")
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn test // tests are required to run before generating the report
}

jar {
    manifest {
        attributes(
                'Main-Class': 'it.unibo.pps.App'
        )
    }
    duplicatesStrategy(DuplicatesStrategy.WARN)
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

application {
    // Define the main class for the application.
    mainClass = 'it.unibo.pps.App'
}
